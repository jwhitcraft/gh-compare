#!/usr/bin/env bash

origin=$(git config "remote.origin.url") || exit $?
upstream=$(git config "remote.upstream.url") || exit $?

branch=$(git symbolic-ref HEAD) || exit $?
# clean the branch name
cbranch=${branch/refs\/heads\//}

#what is the name in the upstream
substart=`awk -v a="${upstream}" -v b=":" 'BEGIN{print index(a,b)}'`
subend=`awk -v a="${upstream}" -v b="/" 'BEGIN{print index(a,b)}'`

upstream=`echo ${upstream} | cut -c$((substart+1))-$((subend-1))`

# format the orgin to be a github url
origin=${origin/://}
origin=${origin/git@/http://}
origin=${origin/.git/}

link=$(git for-each-ref --format=':%(upstream:short)...%(refname:short)' $branch)
if [[ $link = ':...'* ]]; then
    
    echo "Branch (${cbranch}) is not tracking a remote branch"
    echo "To track a branch run the following command:"
    echo "   git branch --set-upstream ${cbranch} <branch to track from>"
    while true; do
    read -p "Which Branch Do You Want to track? (enter \`exit\` to quit): " trackbranch
        case $trackbranch in
            exit ) exit;;
            * ) 
                git show-branch ${trackbranch} 1> /dev/null 2>&1
                if [ $? == 0 ]; then 
                    git branch --set-upstream ${cbranch} ${trackbranch}
                    link=$(git for-each-ref --format=':%(upstream:short)...%(refname:short)' $branch)
                    break
                else
                    echo "Branch ${trackbranch} does not exist, try again"
                fi
            ;;
        esac
    done
fi
link=${link/upstream\//}

url=$origin"/pull/new/"$upstream$link

git push -q origin $cbranch

if which xdg-open > /dev/null; then
  xdg-open $url
elif which gnome-open > /dev/null; then
  gnome-open $url
else
  # just try and open comand
  open $url
fi
